version: 2
jobs:
  #
  # This is for the latest RELEASED Fedora.
  # Update the version of Fedora when new version is released.
  # We don't use row hide, the development version of Fedora
  # till the list of TODO items of u-ctags becomes nil.
  #
  # We assume GNU Make is available.
  #
   fedora32_gmake:
     working_directory: ~/universal-ctags
     docker:
       - image: docker.io/fedora:32
     steps:
       - run:
           name: Install Git
           command: |
             yum -y install git gdb
       - checkout
       - run:
           name: Install build tools
           command: |
             dnf -y install gcc automake autoconf pkgconfig make libseccomp-devel libxml2-devel jansson-devel libyaml-devel findutils diffutils
             dnf -y install jq puppet
       - run:
           name: Build
           command: |
             bash ./autogen.sh
             ./configure --enable-debugging
             make -j 2
       - run:
           name: Test
           command: |
             make check roundtrip CIRCLECI=1

  #
  # On Fedora 31 bmake package cannot be installed because a package
  # required by bmake is not available. More inspection is needed.
  # Fedora 30 is the last version where bmake can be installed.
  #
  # Though we use GNU make extension aggressively in man/Makefile,
  # we can still build ctags with bmake. The man/Makefile is for
  # generating man pages and associated html files without using
  # autotools. Makefile generated by autotools converts .rst.in files
  # to .rst files. It injects proper name of ctags executable.
  # man/Makefile doesn't do so.
  #
   fedora30_bmake:
     working_directory: ~/universal-ctags
     docker:
       - image: docker.io/fedora:30
     steps:
       - run:
           name: Install Git and Gdb
           command: |
             dnf -y install git gdb
       - checkout
       - run:
           name: Install build tools
           command: |
             dnf -y install gcc automake autoconf pkgconfig bmake libseccomp-devel libxml2-devel jansson-devel libyaml-devel findutils
             dnf -y install jq puppet
       - run:
           name: Build
           command: |
             bash ./autogen.sh
             MAKE=bmake ./configure --enable-debugging
             bmake -j 2
       - run:
           name: Test
           command: |
             MAKE=bmake bmake validate-input check roundtrip codecheck CIRCLECI=1

   fedora_distcheck:
     working_directory: ~/universal-ctags
     docker:
       - image: docker.io/fedora:latest
     steps:
       - run:
           name: Install Git and Gdb
           command: |
             dnf -y install git gdb
       - checkout
       - run:
           name: Install build tools
           command: |
             dnf -y install gcc automake autoconf pkgconfig make libseccomp-devel libxml2-devel jansson-devel libyaml-devel findutils diffutils
             dnf -y install jq puppet
       - run:
           name: Build
           command: |
             bash ./autogen.sh
             ./configure
       - run:
           name: Test
           command: |
             make distcheck

   centos_make:
     working_directory: ~/universal-ctags
     docker:
       - image: docker.io/centos:latest
     steps:
       - run:
           name: Install Git
           command: |
             yum -y install git
       - checkout
       - run:
           name: Install build tools
           command: |
              yum -y --enablerepo=PowerTools install python3 gcc automake autoconf pkgconfig make libxml2-devel jansson-devel libyaml-devel findutils diffutils
       - run:
           name: Build
           command: |
             bash ./autogen.sh
             ./configure --enable-debugging
             make -j 2
       - run:
           name: Test
           command: |
             make check roundtrip CIRCLECI=1
   ubuntu20_32bit:
     working_directory: ~/universal-ctags
     docker:
       - image: docker.io/ubuntu:20.04
     steps:
       - run:
           name: Install git
           command: |
             export DEBIAN_FRONTEND=noninteractive
             dpkg --add-architecture i386
             apt-get -y update
             apt-get -y install git
       - checkout
       - run:
           name: Install build tools
           # APT::Immediate-Configure=false is taken from
           # https://superuser.com/questions/199582/apt-error-could-not-perform-immediate-configuration-on
           # I don't understand why I need this.
           # -- Masatake
           command: |
             export DEBIAN_FRONTEND=noninteractive
             apt-get -o APT::Immediate-Configure=false -y install \
             pkg-config autoconf automake make gcc \
             libjansson-dev:i386 libyaml-dev:i386 libseccomp-dev:i386 libxml2-dev:i386 \
             gdb valgrind \
             python3-docutils \
             libc6-dev-i386 libc6-dbg:i386
       - run:
           name: Build
           command: |
             bash ./autogen.sh
             CC='gcc -m32' ./configure --enable-debugging
             make -j 2
       - run:
           name: Test
           command: |
             # make check roundtrip CIRCLECI=1
             make units CIRCLECI=1 CATEGORIES=parser-varlink

workflows:
  version: 2
  build_and_test:
    jobs:
      - ubuntu20_32bit
      - fedora30_bmake
      - fedora_distcheck
      - centos_make
      - fedora32_gmake
