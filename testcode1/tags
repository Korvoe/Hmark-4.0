!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
0	nginx-conf-master/package.json	/^		"src",$/;"	s	array:files
0	nginx-conf-master/package.json	/^	"keywords": [ "nginx", "configuration", "parser" ],$/;"	s	array:keywords
1	nginx-conf-master/package.json	/^		"index.js"$/;"	s	array:files
1	nginx-conf-master/package.json	/^	"keywords": [ "nginx", "configuration", "parser" ],$/;"	s	array:keywords
2	nginx-conf-master/package.json	/^	"keywords": [ "nginx", "configuration", "parser" ],$/;"	s	array:keywords
ASYNC_COOKIE_MAX	async.c	/^#define ASYNC_COOKIE_MAX	/;"	d	file:
AnonymousFunction800ac8b70100	nginx-conf-master/tests/conf-tests.js	/^describe('configuration editing', function() {$/;"	f
AnonymousFunction800ac8b70200	nginx-conf-master/tests/conf-tests.js	/^	describe('access', function() {$/;"	f	function:AnonymousFunction800ac8b70100
AnonymousFunction800ac8b70300	nginx-conf-master/tests/conf-tests.js	/^		it('top-level nodes', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70400	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b70500	nginx-conf-master/tests/conf-tests.js	/^		it('nested nodes', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70600	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('upstream backend { servers { server 127.0.0.1:8080; } }', fun/;"	f
AnonymousFunction800ac8b70700	nginx-conf-master/tests/conf-tests.js	/^		it('map block with quoted directive names', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70800	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('map $http_user_agent $mobile { default 0; "~Opera Mini" 1; \\/;"	f
AnonymousFunction800ac8b70900	nginx-conf-master/tests/conf-tests.js	/^		it('nodes with same name', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70a00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('location \/foo { bar baz; } location \/bar { bat qux; }', fun/;"	f
AnonymousFunction800ac8b70b00	nginx-conf-master/tests/conf-tests.js	/^		it('adding comments', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70c00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b70d00	nginx-conf-master/tests/conf-tests.js	/^		it('removing comments', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b70e00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('#comment\\nfoo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b70f00	nginx-conf-master/tests/conf-tests.js	/^		it('updating comments', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b70200
AnonymousFunction800ac8b71000	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('#comment\\nfoo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b71100	nginx-conf-master/tests/conf-tests.js	/^	describe('events', function() {$/;"	f	function:AnonymousFunction800ac8b70100
AnonymousFunction800ac8b71200	nginx-conf-master/tests/conf-tests.js	/^		it('on add', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b71100
AnonymousFunction800ac8b71300	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b71400	nginx-conf-master/tests/conf-tests.js	/^				file.on('added', function(node) {$/;"	f
AnonymousFunction800ac8b71500	nginx-conf-master/tests/conf-tests.js	/^		it('on remove', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b71100
AnonymousFunction800ac8b71600	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b71700	nginx-conf-master/tests/conf-tests.js	/^				file.on('removed', function(node) {$/;"	f
AnonymousFunction800ac8b71800	nginx-conf-master/tests/conf-tests.js	/^		it('on value change', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b71100
AnonymousFunction800ac8b71900	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b71a00	nginx-conf-master/tests/conf-tests.js	/^				file.on('changed', function(context, oldValue) {$/;"	f
AnonymousFunction800ac8b71b00	nginx-conf-master/tests/conf-tests.js	/^		it('should not emit on change if value is unchanged', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b71100
AnonymousFunction800ac8b71c00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b71d00	nginx-conf-master/tests/conf-tests.js	/^				file.on('changed', function() {$/;"	f
AnonymousFunction800ac8b71e00	nginx-conf-master/tests/conf-tests.js	/^		it('should not emit on removal if node doesn\\'t exist', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b71100
AnonymousFunction800ac8b71f00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b72000	nginx-conf-master/tests/conf-tests.js	/^				file.on('removed', function() {$/;"	f
AnonymousFunction800ac8b72100	nginx-conf-master/tests/conf-tests.js	/^	describe('adding and removing nodes', function() {$/;"	f	function:AnonymousFunction800ac8b70100
AnonymousFunction800ac8b72200	nginx-conf-master/tests/conf-tests.js	/^				it('should not allow adding a node named "' + name + '"', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72300	nginx-conf-master/tests/conf-tests.js	/^					NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b72400	nginx-conf-master/tests/conf-tests.js	/^						file.on('added', function() {$/;"	f
AnonymousFunction800ac8b72500	nginx-conf-master/tests/conf-tests.js	/^		it('should add new block', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72600	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('', function(err, file) {$/;"	f
AnonymousFunction800ac8b72700	nginx-conf-master/tests/conf-tests.js	/^		it('should add new block to existing blocks', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72800	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('server {}', function(err, file) {$/;"	f
AnonymousFunction800ac8b72900	nginx-conf-master/tests/conf-tests.js	/^		it('should add new verbatim block', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72a00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('', function(err, file) {$/;"	f
AnonymousFunction800ac8b72b00	nginx-conf-master/tests/conf-tests.js	/^		it('should create an array for multiple items', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72c00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b72d00	nginx-conf-master/tests/conf-tests.js	/^		it('should create property with value and children', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b72e00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('location \/foo { hello world; }', function(err, file) {$/;"	f
AnonymousFunction800ac8b72f00	nginx-conf-master/tests/conf-tests.js	/^		it('should remove first item when index is not given', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b73000	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; foo baz; foo bat;', function(err, file) {$/;"	f
AnonymousFunction800ac8b73100	nginx-conf-master/tests/conf-tests.js	/^		it('should remove item at index', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b73200	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; foo baz; foo bat;', function(err, file) {$/;"	f
AnonymousFunction800ac8b73300	nginx-conf-master/tests/conf-tests.js	/^		it('should flatten array into property when only one item remains', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
AnonymousFunction800ac8b73400	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; foo baz;', function(err, file) {$/;"	f
AnonymousFunction800ac8b73500	nginx-conf-master/tests/conf-tests.js	/^	describe('converting to nginx-compatible string', function() {$/;"	f	function:AnonymousFunction800ac8b70100
AnonymousFunction800ac8b73600	nginx-conf-master/tests/conf-tests.js	/^		it('should convert to an nginx-compatible string', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b73700	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; baz { bat qux; }', function(err, file) {$/;"	f
AnonymousFunction800ac8b73800	nginx-conf-master/tests/conf-tests.js	/^		it('should convert to an nginx-compatible string with custom TAB', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b73900	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; baz { bat qux; }', { tab: '  ' }, function(err, file/;"	f
AnonymousFunction800ac8b73a00	nginx-conf-master/tests/conf-tests.js	/^		it('should handle directives with the same name', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b73b00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('foo bar; location { meh; } location { meep; } foo bat;', { ta/;"	f
AnonymousFunction800ac8b73c00	nginx-conf-master/tests/conf-tests.js	/^		it('should output comments above directive regardless of original position', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b73d00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource('# first\\nfoo # second\\nbar;', function(err, file) {$/;"	f
AnonymousFunction800ac8b73e00	nginx-conf-master/tests/conf-tests.js	/^		it('should handle line breaks and consecutive strings', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b73f00	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource(source, function(err, file) {$/;"	f
AnonymousFunction800ac8b74000	nginx-conf-master/tests/conf-tests.js	/^		it('should handle blocks with quoted strings', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b74100	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource(source, { tab: '  ' }, function(err, file) {$/;"	f
AnonymousFunction800ac8b74200	nginx-conf-master/tests/conf-tests.js	/^		it('should handle verbatim lua blocks', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b74300	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource(source, { tab: '  ' }, function(err, file) {$/;"	f
AnonymousFunction800ac8b74400	nginx-conf-master/tests/conf-tests.js	/^		it('should handle if statements', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b74500	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource(source, {tab: '  '}, function(err, file) {$/;"	f
AnonymousFunction800ac8b74600	nginx-conf-master/tests/conf-tests.js	/^		it('should handle if statements with fragment', function(done) {$/;"	f	function:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b73500
AnonymousFunction800ac8b74700	nginx-conf-master/tests/conf-tests.js	/^			NginxConfFile.createFromSource(source, {tab: '  '}, function(err, file) {$/;"	f
AnonymousFunction8c5dbefe0100	nginx-conf-master/tests/parser-tests.js	/^describe('parser', function() {$/;"	f
AnonymousFunction8c5dbefe0200	nginx-conf-master/tests/parser-tests.js	/^	describe('basic directive parsing', function() {$/;"	f	function:AnonymousFunction8c5dbefe0100
AnonymousFunction8c5dbefe0300	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with no value', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0400	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0500	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with quoted name', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0600	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('"foo" bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0700	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with value', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0800	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0900	nginx-conf-master/tests/parser-tests.js	/^		it('should parse multiple directives on same line', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0a00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar; baz bat;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0b00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse multiple directives on different lines', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0c00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar;\\nbaz bat;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0d00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with space-delimited values', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe0e00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar baz bat;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe0f00	nginx-conf-master/tests/parser-tests.js	/^		it('should preserve linebreaks in values', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe1000	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar\\n  baz;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1100	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with interpolated variable', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe1200	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar${baz}bat;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1300	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive that ends with interpolated variable', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe1400	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar${baz};', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1500	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive with interpolated variable and whitespace', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe0200
AnonymousFunction8c5dbefe1600	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar${baz} bat;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1700	nginx-conf-master/tests/parser-tests.js	/^	describe('strings', function() {$/;"	f	function:AnonymousFunction8c5dbefe0100
AnonymousFunction8c5dbefe1800	nginx-conf-master/tests/parser-tests.js	/^		it('should parse value with double quote-delimited string', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe1900	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "bar";', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1a00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse value with single quote-delimited string', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe1b00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo \\'bar\\';', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1c00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse double quote-delimited string with escaped double quote', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe1d00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "ba \\\\"ba\\\\"";', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe1e00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse single quote-delimited string with escaped single quote', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe1f00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo \\'ba \\\\\\'ba\\\\\\'\\';', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2000	nginx-conf-master/tests/parser-tests.js	/^		it('should err if string is unclosed', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe2100	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "foo;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2200	nginx-conf-master/tests/parser-tests.js	/^		it('should handle consecutive strings', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe2300	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "bar" "baz";', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2400	nginx-conf-master/tests/parser-tests.js	/^		it('should handle multiple values with string that starts with opening curly bracket', functio/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe2500	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar \\'{\\';', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2600	nginx-conf-master/tests/parser-tests.js	/^		it('should parse value with interpolated variable', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe2700	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "bar${var}";', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2800	nginx-conf-master/tests/parser-tests.js	/^		it('should parse value with interpolated variable and whitespace', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe1700
AnonymousFunction8c5dbefe2900	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo "bar${var}  ";', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2a00	nginx-conf-master/tests/parser-tests.js	/^	describe('scopes', function() {$/;"	f	function:AnonymousFunction8c5dbefe0100
AnonymousFunction8c5dbefe2b00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse children', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe2c00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo { bar; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2d00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse siblings with children', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe2e00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo { bar baz; } sibling; foo2 { bar2 baz2; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe2f00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse nested children', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3000	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo { bar { baz { bat; } } }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3100	nginx-conf-master/tests/parser-tests.js	/^		it('should parse named scope', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3200	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('upstream backend { server 127.0.0.1:3000; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3300	nginx-conf-master/tests/parser-tests.js	/^		it('should parse lua block', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3400	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('content_by_lua_block { ngx.say(ngx.var.arg_a) }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3500	nginx-conf-master/tests/parser-tests.js	/^		it('should parse lua block with nested curly brackets', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3600	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('content_by_lua_block { lol { foo {} } }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3700	nginx-conf-master/tests/parser-tests.js	/^		it('should parse lua block with newlines', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3800	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('content_by_lua_block { ngx.say(ngx.var.arg_a)\\nend }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3900	nginx-conf-master/tests/parser-tests.js	/^		it('should parse directive following a lua block', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3a00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('content_by_lua_block { echo \\'foo\\' } foo bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3b00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse if statement', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3c00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('if ($bad) { return 403; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe3d00	nginx-conf-master/tests/parser-tests.js	/^		it('should parse if statement with regex and newlines', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe3e00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('if ($http_cookie ~* "id=([^;]+)(?:;|$)") \\n{\\n set $id $1;\\n }', function(er/;"	f
AnonymousFunction8c5dbefe3f00	nginx-conf-master/tests/parser-tests.js	/^		it('should handle if statement with fragment', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe4000	nginx-conf-master/tests/parser-tests.js	/^			parser.parse(source, function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe4100	nginx-conf-master/tests/parser-tests.js	/^		it('should parse value with interpolated variable that opens scope immediately afterward', fun/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe2a00
AnonymousFunction8c5dbefe4200	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar${var}{ hi; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe4300	nginx-conf-master/tests/parser-tests.js	/^	describe('invalid and weird syntax', function() {$/;"	f	function:AnonymousFunction8c5dbefe0100
AnonymousFunction8c5dbefe4400	nginx-conf-master/tests/parser-tests.js	/^		it('directive not terminated with ";"', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4500	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo', function(err) {$/;"	f
AnonymousFunction8c5dbefe4600	nginx-conf-master/tests/parser-tests.js	/^		it('directive value not terminated with ";"', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4700	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar', function(err) {$/;"	f
AnonymousFunction8c5dbefe4800	nginx-conf-master/tests/parser-tests.js	/^		it('*_by_lua_block directive not terminated with "}"', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4900	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo_by_lua_block { ngx.say(\\'Hello,world!\\')', function(err) {$/;"	f
AnonymousFunction8c5dbefe4a00	nginx-conf-master/tests/parser-tests.js	/^		it('*_by_lua_block directive with mismatched curly brackets', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4b00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo_by_lua_block { foo {} ', function(err) {$/;"	f
AnonymousFunction8c5dbefe4c00	nginx-conf-master/tests/parser-tests.js	/^		it('*_by_lua_block should blow up if mismatched curly bracket is in a comment', function(done)/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4d00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo_by_lua_block {\\n-- this is a comment }\\n } ', function(err) {$/;"	f
AnonymousFunction8c5dbefe4e00	nginx-conf-master/tests/parser-tests.js	/^		it('directive semicolon after comment', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe4f00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo # comment\\n bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5000	nginx-conf-master/tests/parser-tests.js	/^		it('directive opening brace after comment', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe5100	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo # comment\\n { bar; }', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5200	nginx-conf-master/tests/parser-tests.js	/^		it('missing closing brace should not throw', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe4300
AnonymousFunction8c5dbefe5300	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo { bar;', function(err) {$/;"	f
AnonymousFunction8c5dbefe5400	nginx-conf-master/tests/parser-tests.js	/^	describe('comments', function() {$/;"	f	function:AnonymousFunction8c5dbefe0100
AnonymousFunction8c5dbefe5500	nginx-conf-master/tests/parser-tests.js	/^		it('should ignore comments on their own line', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe5600	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('# comment\\nfoo;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5700	nginx-conf-master/tests/parser-tests.js	/^		it('should ignore comments on same line as directive', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe5800	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo; # comment', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5900	nginx-conf-master/tests/parser-tests.js	/^		it('should attach comments before directive to current node', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe5a00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('# this is a comment\\nfoo bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5b00	nginx-conf-master/tests/parser-tests.js	/^		it('should attach multiple comments to current node', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe5c00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('# this is a comment\\n#another comment\\nfoo bar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5d00	nginx-conf-master/tests/parser-tests.js	/^		it('should attach comment in middle of directive to current node', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe5e00	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo # this is a comment\\nbar;', function(err, tree) {$/;"	f
AnonymousFunction8c5dbefe5f00	nginx-conf-master/tests/parser-tests.js	/^		it('should ignore comments at end of source', function(done) {$/;"	f	function:AnonymousFunction8c5dbefe0100.AnonymousFunction8c5dbefe5400
AnonymousFunction8c5dbefe6000	nginx-conf-master/tests/parser-tests.js	/^			parser.parse('foo bar; # this is a comment', function(err, tree) {$/;"	f
AnonymousFunction917577530100	nginx-conf-master/src/parser.js	/^	fs.readFile(file, encoding, function(err, contents) {$/;"	f
AnonymousFunctionc45f7b360100	nginx-conf-master/tests/filesystem-tests.js	/^	readStream.on('end', function(err) {$/;"	f
AnonymousFunctionc45f7b360200	nginx-conf-master/tests/filesystem-tests.js	/^describe('flushing to disk', function() {$/;"	f
AnonymousFunctionc45f7b360300	nginx-conf-master/tests/filesystem-tests.js	/^	beforeEach(function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b360400	nginx-conf-master/tests/filesystem-tests.js	/^		copyFile(function(err, temp) {$/;"	f	function:AnonymousFunctionc45f7b360200.AnonymousFunctionc45f7b360300
AnonymousFunctionc45f7b360500	nginx-conf-master/tests/filesystem-tests.js	/^	afterEach(function() {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b360600	nginx-conf-master/tests/filesystem-tests.js	/^	it('should return expected value', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b360700	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b360800	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b360900	nginx-conf-master/tests/filesystem-tests.js	/^	it('when node value changes', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b360a00	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b360b00	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b360c00	nginx-conf-master/tests/filesystem-tests.js	/^				NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b360d00	nginx-conf-master/tests/filesystem-tests.js	/^	it('when node is added', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b360e00	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b360f00	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b361000	nginx-conf-master/tests/filesystem-tests.js	/^				NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361100	nginx-conf-master/tests/filesystem-tests.js	/^	it('when node is removed', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b361200	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361300	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b361400	nginx-conf-master/tests/filesystem-tests.js	/^				NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361500	nginx-conf-master/tests/filesystem-tests.js	/^	it('only once for consecutive changes', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b361600	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361700	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b361800	nginx-conf-master/tests/filesystem-tests.js	/^				NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361900	nginx-conf-master/tests/filesystem-tests.js	/^	it('manually', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b361a00	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361b00	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b361c00	nginx-conf-master/tests/filesystem-tests.js	/^				NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361d00	nginx-conf-master/tests/filesystem-tests.js	/^	it('should not flush when node value is changed after die()', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b361e00	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b361f00	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b362000	nginx-conf-master/tests/filesystem-tests.js	/^			setTimeout(function() {$/;"	f	function:AnonymousFunctionc45f7b361e00
AnonymousFunctionc45f7b362100	nginx-conf-master/tests/filesystem-tests.js	/^	it('should not flush when node is added after die()', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b362200	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b362300	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b362400	nginx-conf-master/tests/filesystem-tests.js	/^			setTimeout(function() {$/;"	f	function:AnonymousFunctionc45f7b362200
AnonymousFunctionc45f7b362500	nginx-conf-master/tests/filesystem-tests.js	/^	it('should not flush when node is removed after die()', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b362600	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.create(tempFile, function(err, file) {$/;"	f
AnonymousFunctionc45f7b362700	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b362800	nginx-conf-master/tests/filesystem-tests.js	/^			setTimeout(function() {$/;"	f	function:AnonymousFunctionc45f7b362600
AnonymousFunctionc45f7b362900	nginx-conf-master/tests/filesystem-tests.js	/^	it('should create a new file if one does not already exist', function(done) {$/;"	f	function:AnonymousFunctionc45f7b360200
AnonymousFunctionc45f7b362a00	nginx-conf-master/tests/filesystem-tests.js	/^		NginxConfFile.createFromSource('foo bar;', function(err, file) {$/;"	f
AnonymousFunctionc45f7b362b00	nginx-conf-master/tests/filesystem-tests.js	/^			file.on('flushed', function() {$/;"	f
AnonymousFunctionc45f7b362c00	nginx-conf-master/tests/filesystem-tests.js	/^				fs.readFile(backupFile, 'utf8', function(err, contents) {$/;"	f
AnonymousFunctionf320590c0100	nginx-conf-master/src/conf.js	/^				.filter(function(key) {$/;"	f	function:createConfItem
AnonymousFunctionf320590c0200	nginx-conf-master/src/conf.js	/^				.map(function(key) {$/;"	f	function:createConfItem
AnonymousFunctionf320590c0300	nginx-conf-master/src/conf.js	/^		get: function() {$/;"	f
AnonymousFunctionf320590c0400	nginx-conf-master/src/conf.js	/^		set: function(newValue) {$/;"	f
AnonymousFunctionf320590c0500	nginx-conf-master/src/conf.js	/^		return function() {$/;"	f	function:NginxConfFile.liveListener
AnonymousFunctionf320590c0600	nginx-conf-master/src/conf.js	/^		fs.writeFile(this.files[i], contents, 'utf8', function(err) {$/;"	f
AnonymousFunctionf320590c0700	nginx-conf-master/src/conf.js	/^	this.writeTimeout = setTimeout(function() {$/;"	f	function:NginxConfFile.flush
AnonymousFunctionf320590c0800	nginx-conf-master/src/conf.js	/^		self.write(function(err, wrote) {$/;"	f
AnonymousFunctionf320590c0900	nginx-conf-master/src/conf.js	/^	parser.parseFile(file, 'utf8', function(err, tree) {$/;"	f
AnonymousFunctionf320590c0a00	nginx-conf-master/src/conf.js	/^	parser.parse(source, function(err, tree) {$/;"	f
Comments	nginx-conf-master/README.md	/^### Comments$/;"	S	section:nginx-conf""Usage
ComputeSplitKey	system.go	/^func (s *SystemConfig) ComputeSplitKey($/;"	f	struct:config.SystemConfig	typeref:typename:(rr roachpb.RKey)
DecodeKeyIntoZoneIDAndSuffix	system.go	/^func DecodeKeyIntoZoneIDAndSuffix(key roachpb.RKey) (id SystemTenantObjectID, keySuffix []byte) /;"	f	package:config	typeref:typename:(id SystemTenantObjectID, keySuffix []byte)
DefaultZoneConfig	system.go	/^	DefaultZoneConfig *zonepb.ZoneConfig$/;"	m	struct:config.SystemConfig	typeref:typename:*zonepb.ZoneConfig
Development	nginx-conf-master/README.md	/^## Development$/;"	s	chapter:nginx-conf
Equal	system.go	/^func (s *SystemConfig) Equal(other *SystemConfigEntries) bool {$/;"	f	struct:config.SystemConfig	typeref:typename:bool
GetIndex	system.go	/^func (s *SystemConfig) GetIndex(key roachpb.Key) (int, bool) {$/;"	f	struct:config.SystemConfig	typeref:typename:(int, bool)
GetLargestObjectID	system.go	/^func (s *SystemConfig) GetLargestObjectID($/;"	f	struct:config.SystemConfig	typeref:typename:(SystemTenantObjectID, error)
GetValue	system.go	/^func (s *SystemConfig) GetValue(key roachpb.Key) *roachpb.Value {$/;"	f	struct:config.SystemConfig	typeref:typename:*roachpb.Value
GetZoneConfigForKey	system.go	/^func (s *SystemConfig) GetZoneConfigForKey(key roachpb.RKey) (*zonepb.ZoneConfig, error) {$/;"	f	struct:config.SystemConfig	typeref:typename:(*zonepb.ZoneConfig, error)
GetZoneConfigForObject	system.go	/^func (s *SystemConfig) GetZoneConfigForObject($/;"	f	struct:config.SystemConfig	typeref:typename:(*zonepb.ZoneConfig, error)
Installation	nginx-conf-master/README.md	/^## Installation$/;"	s	chapter:nginx-conf
MAX_WORK	async.c	/^#define MAX_WORK	/;"	d	file:
NeedsSplit	system.go	/^func (s *SystemConfig) NeedsSplit(ctx context.Context, startKey, endKey roachpb.RKey) bool {$/;"	f	struct:config.SystemConfig	typeref:typename:bool
NewSystemConfig	system.go	/^func NewSystemConfig(defaultZoneConfig *zonepb.ZoneConfig) *SystemConfig {$/;"	f	package:config	typeref:typename:*SystemConfig
NginxConfFile	nginx-conf-master/src/conf.js	/^function NginxConfFile(tree, options) {$/;"	c
NginxConfFile	nginx-conf-master/tests/conf-tests.js	/^	NginxConfFile = require('..\/').NginxConfFile;$/;"	v
NginxConfFile	nginx-conf-master/tests/filesystem-tests.js	/^	NginxConfFile = require('..\/').NginxConfFile,$/;"	v
NginxParseTreeNode	nginx-conf-master/src/parser.js	/^function NginxParseTreeNode(name, value, parent, children) {$/;"	c
NginxParser	nginx-conf-master/src/parser.js	/^function NginxParser() {$/;"	c
StaticSplits	system.go	/^func StaticSplits() []roachpb.RKey {$/;"	f	package:config	typeref:typename:[]roachpb.RKey
SystemConfig	system.go	/^type SystemConfig struct {$/;"	s	package:config
SystemConfigEntries	system.go	/^	SystemConfigEntries$/;"	M	struct:config.SystemConfig	typeref:typename:SystemConfigEntries
SystemTenantObjectID	system.go	/^type SystemTenantObjectID uint32$/;"	t	package:config	typeref:typename:uint32
Usage	nginx-conf-master/README.md	/^## Usage$/;"	s	chapter:nginx-conf
ZoneConfigHook	system.go	/^	ZoneConfigHook zoneConfigHook$/;"	v	package:config	typeref:type:zoneConfigHook
__async_schedule	async.c	/^static async_cookie_t __async_schedule(async_func_t func, void *data, struct async_domain *domai/;"	f	typeref:typename:async_cookie_t	file:
__proto__	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.__proto__ = require('events').EventEmitter.prototype;$/;"	m	class:NginxConfFile
_add	nginx-conf-master/src/conf.js	/^		_add: function(name, value, children, comments, options) {$/;"	m	class:createConfItem.newContext
_add	nginx-conf-master/src/conf.js	/^		_name: 1, _value: 1, _remove: 1, _add: 1,$/;"	p	class:blacklistedNames
_add	nginx-conf-master/tests/conf-tests.js	/^			_add: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_addVerbatimBlock	nginx-conf-master/src/conf.js	/^		_addVerbatimBlock: function(name, value, comments) {$/;"	m	class:createConfItem.newContext
_addVerbatimBlock	nginx-conf-master/src/conf.js	/^		_isVerbatim: 1, _addVerbatimBlock: 1$/;"	p	class:blacklistedNames
_addVerbatimBlock	nginx-conf-master/tests/conf-tests.js	/^			_addVerbatimBlock: 1$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_comments	nginx-conf-master/src/conf.js	/^		_getString: 1, _root: 1, toString: 1, _comments: 1,$/;"	p	class:blacklistedNames
_comments	nginx-conf-master/tests/conf-tests.js	/^			_comments: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_getString	nginx-conf-master/src/conf.js	/^		_getString: 1, _root: 1, toString: 1, _comments: 1,$/;"	p	class:blacklistedNames
_getString	nginx-conf-master/src/conf.js	/^		_getString: function(depth) {$/;"	m	class:createConfItem.newContext
_getString	nginx-conf-master/tests/conf-tests.js	/^			_getString: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_isVerbatim	nginx-conf-master/src/conf.js	/^		_isVerbatim: 1, _addVerbatimBlock: 1$/;"	p	class:blacklistedNames
_isVerbatim	nginx-conf-master/tests/conf-tests.js	/^			_isVerbatim: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_name	nginx-conf-master/src/conf.js	/^		_name: 1, _value: 1, _remove: 1, _add: 1,$/;"	p	class:blacklistedNames
_name	nginx-conf-master/tests/conf-tests.js	/^			_name: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_remove	nginx-conf-master/src/conf.js	/^		_name: 1, _value: 1, _remove: 1, _add: 1,$/;"	p	class:blacklistedNames
_remove	nginx-conf-master/src/conf.js	/^		_remove: function(name, index) {$/;"	m	class:createConfItem.newContext
_remove	nginx-conf-master/tests/conf-tests.js	/^			_remove: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_root	nginx-conf-master/src/conf.js	/^		_getString: 1, _root: 1, toString: 1, _comments: 1,$/;"	p	class:blacklistedNames
_root	nginx-conf-master/tests/conf-tests.js	/^			_root: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
_value	nginx-conf-master/src/conf.js	/^		_name: 1, _value: 1, _remove: 1, _add: 1,$/;"	p	class:blacklistedNames
_value	nginx-conf-master/tests/conf-tests.js	/^			_value: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
async_entry	async.c	/^struct async_entry {$/;"	s	file:
async_run_entry_fn	async.c	/^static void async_run_entry_fn(struct work_struct *work)$/;"	f	typeref:typename:void	file:
async_schedule	async.c	/^async_cookie_t async_schedule(async_func_t func, void *data)$/;"	f	typeref:typename:async_cookie_t
async_schedule_domain	async.c	/^async_cookie_t async_schedule_domain(async_func_t func, void *data,$/;"	f	typeref:typename:async_cookie_t
async_synchronize_cookie	async.c	/^void async_synchronize_cookie(async_cookie_t cookie)$/;"	f	typeref:typename:void
async_synchronize_cookie_domain	async.c	/^void async_synchronize_cookie_domain(async_cookie_t cookie, struct async_domain *domain)$/;"	f	typeref:typename:void
async_synchronize_full	async.c	/^void async_synchronize_full(void)$/;"	f	typeref:typename:void
async_synchronize_full_domain	async.c	/^void async_synchronize_full_domain(struct async_domain *domain)$/;"	f	typeref:typename:void
async_unregister_domain	async.c	/^void async_unregister_domain(struct async_domain *domain)$/;"	f	typeref:typename:void
author	nginx-conf-master/package.json	/^	"author": "Tommy Montgomery <tmont@tmont.com> (http:\/\/tmont.com\/)",$/;"	s
blacklist	nginx-conf-master/tests/conf-tests.js	/^		var blacklist = {$/;"	c	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100
blacklistedNames	nginx-conf-master/src/conf.js	/^	blacklistedNames = {$/;"	c
case	nginx-conf-master/src/parser.js	/^		case '}':$/;"	v
combined	system.go	/^	combined *zonepb.ZoneConfig$/;"	m	struct:config.zoneEntry	typeref:typename:*zonepb.ZoneConfig
config	system.go	/^package config$/;"	p
context	nginx-conf-master/src/parser.js	/^				this.context = new NginxParseTreeNode(null, null, c === '{' ? this.context : this.context.pa/;"	v
context	nginx-conf-master/src/parser.js	/^				this.context = new NginxParseTreeNode(null, null, this.context.parent);$/;"	v
cookie	async.c	/^	async_cookie_t		cookie;$/;"	m	struct:async_entry	typeref:typename:async_cookie_t	file:
copyFile	nginx-conf-master/tests/filesystem-tests.js	/^function copyFile(callback) {$/;"	f
create	nginx-conf-master/src/conf.js	/^NginxConfFile.create = function(file, options, callback) {$/;"	f	function:NginxConfFile
createConfItem	nginx-conf-master/src/conf.js	/^function createConfItem(file, context, node) {$/;"	f
createFromSource	nginx-conf-master/src/conf.js	/^NginxConfFile.createFromSource = function(source, options, callback) {$/;"	f	function:NginxConfFile
current_is_async	async.c	/^bool current_is_async(void)$/;"	f	typeref:typename:bool
data	async.c	/^	void			*data;$/;"	m	struct:async_entry	typeref:typename:void *	file:
description	nginx-conf-master/package.json	/^	"description": "Dynamically update nginx configuration files via programmatic API",$/;"	s
devDependencies	nginx-conf-master/package.json	/^	"devDependencies": {$/;"	o
die	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.die = function(file) {$/;"	m	class:NginxConfFile
directories	nginx-conf-master/package.json	/^	"directories": {$/;"	o
domain	async.c	/^	struct async_domain	*domain;$/;"	m	struct:async_entry	typeref:struct:async_domain *	file:
domain_list	async.c	/^	struct list_head	domain_list;$/;"	m	struct:async_entry	typeref:struct:list_head	file:
encodeServerSide	sample_java.java	/^  private String encodeServerSide() {$/;"	m
entry_count	async.c	/^static atomic_t entry_count;$/;"	v	typeref:typename:atomic_t	file:
error	nginx-conf-master/src/parser.js	/^	this.error = {$/;"	c	class:NginxParser.setError
files	nginx-conf-master/package.json	/^	"files": [$/;"	a
flush	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.flush = function(callback) {$/;"	m	class:NginxConfFile
fs	nginx-conf-master/src/conf.js	/^	fs = require('fs'),$/;"	v
fs	nginx-conf-master/src/parser.js	/^var fs = require('fs');$/;"	v
fs	nginx-conf-master/tests/filesystem-tests.js	/^	fs = require('fs'),$/;"	v
func	async.c	/^	async_func_t		func;$/;"	m	struct:async_entry	typeref:typename:async_func_t	file:
get	system.go	/^func (s *SystemConfig) get(key roachpb.Key) *roachpb.KeyValue {$/;"	f	struct:config.SystemConfig	typeref:typename:*roachpb.KeyValue
getIndexBound	system.go	/^func (s *SystemConfig) getIndexBound(key roachpb.Key) int {$/;"	f	struct:config.SystemConfig	typeref:typename:int
getSystemTenantDesc	system.go	/^func (s *SystemConfig) getSystemTenantDesc(key roachpb.Key) *roachpb.Value {$/;"	f	struct:config.SystemConfig	typeref:typename:*roachpb.Value
getZoneConfigForKey	system.go	/^func (s *SystemConfig) getZoneConfigForKey($/;"	f	struct:config.SystemConfig	typeref:typename:(*zonepb.ZoneConfig, error)
getZoneEntry	system.go	/^func (s *SystemConfig) getZoneEntry(id SystemTenantObjectID) (zoneEntry, error) {$/;"	f	struct:config.SystemConfig	typeref:typename:(zoneEntry, error)
global_list	async.c	/^	struct list_head	global_list;$/;"	m	struct:async_entry	typeref:struct:list_head	file:
index	nginx-conf-master/src/parser.js	/^		index: this.index,$/;"	p	class:NginxParser.setError.error
isPseudoTableID	system.go	/^func isPseudoTableID(id uint32) bool {$/;"	f	package:config	typeref:typename:bool
keywords	nginx-conf-master/package.json	/^	"keywords": [ "nginx", "configuration", "parser" ],$/;"	a
lib	nginx-conf-master/package.json	/^		"lib": "src"$/;"	s	object:directories
license	nginx-conf-master/package.json	/^	"license": "MIT",$/;"	s
line	nginx-conf-master/src/parser.js	/^		line: line$/;"	p	class:NginxParser.setError.error
live	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.live = function(file) {$/;"	m	class:NginxConfFile
liveListener	nginx-conf-master/src/conf.js	/^	this.liveListener = (function(file) {$/;"	m	class:NginxConfFile
lowest_in_progress	async.c	/^static async_cookie_t lowest_in_progress(struct async_domain *domain)$/;"	f	typeref:typename:async_cookie_t	file:
message	nginx-conf-master/src/parser.js	/^		message: message,$/;"	p	class:NginxParser.setError.error
mocha	nginx-conf-master/package.json	/^		"mocha": "2.4.5",$/;"	s	object:devDependencies
mu	system.go	/^	mu                struct {$/;"	m	struct:config.SystemConfig	typeref:typename:struct { syncutil.RWMutex; zoneCache map[SystemTenantObjectID]zoneEntry; shouldSplitCache map[SystemTenantObjectID]bool; }
name	nginx-conf-master/package.json	/^	"name": "nginx-conf",$/;"	s
newContext	nginx-conf-master/src/conf.js	/^	var newContext = {$/;"	c	class:createConfItem
next_cookie	async.c	/^static async_cookie_t next_cookie = 1;$/;"	v	typeref:typename:async_cookie_t	file:
nginx-conf	nginx-conf-master/README.md	/^# nginx-conf$/;"	c
parse	nginx-conf-master/src/parser.js	/^NginxParser.prototype.parse = function(source, callback) {$/;"	m	class:NginxParser
parse	nginx-conf-master/src/parser.js	/^exports.parse = function(source, callback) {$/;"	f	function:exports
parseFile	nginx-conf-master/src/parser.js	/^NginxParser.prototype.parseFile = function(file, encoding, callback) {$/;"	m	class:NginxParser
parseFile	nginx-conf-master/src/parser.js	/^exports.parseFile = function(file, encoding, callback) {$/;"	f	function:exports
parseNext	nginx-conf-master/src/parser.js	/^NginxParser.prototype.parseNext = function() {$/;"	m	class:NginxParser
parser	nginx-conf-master/index.js	/^	parser = require('.\/src\/parser');$/;"	v
parser	nginx-conf-master/src/conf.js	/^var parser = require('.\/parser'),$/;"	v
parser	nginx-conf-master/tests/parser-tests.js	/^	parser = require('..\/');$/;"	v
path	nginx-conf-master/tests/filesystem-tests.js	/^	path = require('path');$/;"	v
pkg	nginx-conf-master/index.js	/^var pkg = require('.\/package.json'),$/;"	v
placeholder	system.go	/^	placeholder *zonepb.ZoneConfig$/;"	m	struct:config.zoneEntry	typeref:typename:*zonepb.ZoneConfig
readComment	nginx-conf-master/src/parser.js	/^NginxParser.prototype.readComment = function() {$/;"	m	class:NginxParser
readString	nginx-conf-master/src/parser.js	/^NginxParser.prototype.readString = function() {$/;"	m	class:NginxParser
readVerbatimBlock	nginx-conf-master/src/parser.js	/^NginxParser.prototype.readVerbatimBlock = function() {$/;"	m	class:NginxParser
readWord	nginx-conf-master/src/parser.js	/^NginxParser.prototype.readWord = function() {$/;"	m	class:NginxParser
repository	nginx-conf-master/package.json	/^	"repository": {$/;"	o
scripts	nginx-conf-master/package.json	/^	"scripts": {$/;"	o
setError	nginx-conf-master/src/parser.js	/^NginxParser.prototype.setError = function(message) {$/;"	m	class:NginxParser
should	nginx-conf-master/package.json	/^		"should": "8.2.2"$/;"	s	object:devDependencies
should	nginx-conf-master/tests/conf-tests.js	/^var should = require('should'),$/;"	v
should	nginx-conf-master/tests/filesystem-tests.js	/^var should = require('should'),$/;"	v
should	nginx-conf-master/tests/parser-tests.js	/^var should = require('should'),$/;"	v
shouldSplitOnSystemTenantObject	system.go	/^func (s *SystemConfig) shouldSplitOnSystemTenantObject(id SystemTenantObjectID) bool {$/;"	f	struct:config.SystemConfig	typeref:typename:bool
staticSplits	system.go	/^var staticSplits = []roachpb.RKey{$/;"	v	package:config
systemTenantTableBoundarySplitKey	system.go	/^func (s *SystemConfig) systemTenantTableBoundarySplitKey($/;"	f	struct:config.SystemConfig	typeref:typename:roachpb.RKey
tenantBoundarySplitKey	system.go	/^func (s *SystemConfig) tenantBoundarySplitKey($/;"	f	struct:config.SystemConfig	typeref:typename:roachpb.RKey
test	nginx-conf-master/package.json	/^		"test": "node_modules\/.bin\/mocha -R spec .\/tests"$/;"	s	object:scripts
testingLargestIDHook	system.go	/^	testingLargestIDHook func(SystemTenantObjectID) SystemTenantObjectID$/;"	v	package:config	typeref:typename:func(SystemTenantObjectID) SystemTenantObjectID
toString	nginx-conf-master/src/conf.js	/^		_getString: 1, _root: 1, toString: 1, _comments: 1,$/;"	p	class:blacklistedNames
toString	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.toString = function() {$/;"	m	class:NginxConfFile
toString	nginx-conf-master/tests/conf-tests.js	/^			toString: 1,$/;"	p	class:AnonymousFunction800ac8b70100.AnonymousFunction800ac8b72100.blacklist
trimmedValue	nginx-conf-master/src/parser.js	/^			var trimmedValue = value.trim();$/;"	v
type	nginx-conf-master/package.json	/^		"type": "git",$/;"	s	object:repository
url	nginx-conf-master/package.json	/^		"url": "https:\/\/github.com\/tmont\/nginx-conf.git"$/;"	s	object:repository
version	nginx-conf-master/package.json	/^	"version": "1.5.0",$/;"	s
work	async.c	/^	struct work_struct	work;$/;"	m	struct:async_entry	typeref:struct:work_struct	file:
write	nginx-conf-master/src/conf.js	/^NginxConfFile.prototype.write = function(callback) {$/;"	m	class:NginxConfFile
ws	nginx-conf-master/src/parser.js	/^				var ws = \/^\\s*\/.exec(this.source.substring(this.index));$/;"	v
zone	system.go	/^	zone        *zonepb.ZoneConfig$/;"	m	struct:config.zoneEntry	typeref:typename:*zonepb.ZoneConfig
zoneConfigHook	system.go	/^type zoneConfigHook func($/;"	t	package:config	typeref:typename:func(sysCfg *SystemConfig, objectID SystemTenantObjectID,) (zone *zonepb.ZoneConfig, placeholder *zonepb.ZoneConfig, cache bool, err error)
zoneEntry	system.go	/^type zoneEntry struct {$/;"	s	package:config
